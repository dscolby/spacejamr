% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NetSim.R
\name{plot.NetSim}
\alias{plot.NetSim}
\title{Plot a simulated network from a NetSim object}
\usage{
\method{plot}{NetSim}(
  x,
  y,
  ...,
  layout = "stress",
  title = "Network Simulation",
  node_color = "red",
  edge_color = "blue"
)
}
\arguments{
\item{x}{a NetSim graph}

\item{y}{ignored.}

\item{...}{ignored.}

\item{layout}{a layout to display the graph. Layout must be a valid string.
from the ggraph package. Default is "stress".}

\item{title}{an optional title.}

\item{node_color}{a color for the nodes. Default is blue.}

\item{edge_color}{a color for the edges. Default is red.}
}
\value{
A ggraph object
}
\description{
This can take either a PowerLawNetwork or APLNetwork object as
input, both of which are chidren of the NetSim class.
}
\details{
This method returns a ggraph object, which can be further refined
using standard ggraph and ggplot facilities.
}
\examples{
\dontrun{
   # Create spacejamr object
   mex <- spacejamr("Z:shapefiles", "mexico_adm0")

   # With PointProcess
   mex_points <- PointProcess(1000, mex, 42)
   apl_points <- APLNetwork(mex_points, base_prob = 0.92, scale = 1,
                         threshold = 0.5, power = -2.4)
   plot(apl_points)

   # With HaltonSeq
   mex_seq <- HaltonSeq(1000, mex, 42)
   apl_seq <- APLNetwork(mex_seq, base_prob = 0.98, scale = 100,
                      threshold = 0.5, power = -1.87)
   plot(apl_seq)
}

}
\seealso{
\code{\link[ggraph:ggraph]{ggraph::ggraph()}}
}
\author{
Darren Colby \cr
Email:dscolby17@gmail.com
}
